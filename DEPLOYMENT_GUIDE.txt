# PANDUAN DEPLOYMENT KE PYTHONANYWHERE
# Dashboard Visualisasi Data JKN

===============================================================================
LANGKAH-LANGKAH DEPLOYMENT
===============================================================================

## PERSIAPAN
1. Buat akun di https://www.pythonanywhere.com (gratis)
2. Login ke dashboard PythonAnywhere
3. Siapkan semua file proyek

===============================================================================

## STEP 1: UPLOAD FILES KE PYTHONANYWHERE

### Opsi A: Upload via Web Interface
1. Klik tab "Files" di dashboard PythonAnywhere
2. Navigate ke home directory (/home/yourusername/)
3. Buat folder baru: dashboard-jkn
4. Upload files satu per satu:
   - app.py
   - data_preprocessing.py
   - statistical_analysis.py
   - data_visualization.py
   - requirements.txt
   - jmlh_psn_rwt_jln_mnrt_klnk_brdsrkn_jk_11.xlsx
   - data_cleaned.csv (jika sudah ada)
5. Buat folder 'templates' dan upload semua file HTML
6. Buat folder 'static' dan upload semua file visualisasi

### Opsi B: Upload via Git (Recommended)
1. Push proyek ke GitHub repository
2. Di PythonAnywhere, buka "Bash console"
3. Clone repository:
   ```bash
   git clone https://github.com/yourusername/dashboard-jkn.git
   ```

===============================================================================

## STEP 2: INSTALL DEPENDENCIES

1. Buka "Bash console" di PythonAnywhere
2. Navigate ke folder proyek:
   ```bash
   cd dashboard-jkn
   ```

3. Install dependencies:
   ```bash
   pip3.10 install --user -r requirements.txt
   ```
   
   Atau install satu per satu:
   ```bash
   pip3.10 install --user Flask
   pip3.10 install --user pandas
   pip3.10 install --user numpy
   pip3.10 install --user matplotlib
   pip3.10 install --user seaborn
   pip3.10 install --user openpyxl
   pip3.10 install --user plotly
   pip3.10 install --user scipy
   ```

4. Verifikasi instalasi:
   ```bash
   python3.10 -c "import flask; import pandas; print('OK')"
   ```

===============================================================================

## STEP 3: SETUP WEB APP

1. Klik tab "Web" di dashboard PythonAnywhere
2. Klik "Add a new web app"
3. Pilih domain: yourusername.pythonanywhere.com
4. Klik "Next"
5. Pilih "Manual configuration" (jangan pilih Flask wizard)
6. Pilih Python version: Python 3.10
7. Klik "Next" sampai selesai

===============================================================================

## STEP 4: CONFIGURE WSGI FILE

1. Di tab "Web", scroll ke bagian "Code"
2. Klik link WSGI configuration file
3. Hapus semua isi file
4. Replace dengan kode berikut:

```python
import sys
import os

# Add your project directory to the sys.path
project_home = '/home/yourusername/dashboard-jkn'
if project_home not in sys.path:
    sys.path = [project_home] + sys.path

# Set environment variables if needed
os.environ['FLASK_ENV'] = 'production'

# Import flask app
from app import app as application
```

**PENTING**: Ganti 'yourusername' dengan username PythonAnywhere Anda!

5. Save file (Ctrl+S atau klik "Save")

===============================================================================

## STEP 5: CONFIGURE STATIC FILES

1. Masih di tab "Web", scroll ke "Static files"
2. Klik "Enter URL" dan masukkan: /static/
3. Klik "Enter path" dan masukkan: /home/yourusername/dashboard-jkn/static/
4. Klik ✓ (checkmark) untuk save

**PENTING**: Ganti 'yourusername' dengan username PythonAnywhere Anda!

===============================================================================

## STEP 6: VIRTUAL ENVIRONMENT (Opsional, Recommended)

### Buat Virtual Environment:
1. Buka Bash console
2. Navigate ke project folder:
   ```bash
   cd dashboard-jkn
   ```

3. Buat virtual environment:
   ```bash
   python3.10 -m venv venv
   ```

4. Activate virtual environment:
   ```bash
   source venv/bin/activate
   ```

5. Install dependencies:
   ```bash
   pip install -r requirements.txt
   ```

### Update WSGI File untuk Virtual Environment:
```python
import sys
import os

# Activate virtual environment
activate_this = '/home/yourusername/dashboard-jkn/venv/bin/activate_this.py'
with open(activate_this) as file_:
    exec(file_.read(), dict(__file__=activate_this))

# Add project directory
project_home = '/home/yourusername/dashboard-jkn'
if project_home not in sys.path:
    sys.path = [project_home] + sys.path

# Import flask app
from app import app as application
```

===============================================================================

## STEP 7: RELOAD WEB APP

1. Di tab "Web", scroll ke atas
2. Klik tombol hijau besar "Reload yourusername.pythonanywhere.com"
3. Tunggu beberapa detik

===============================================================================

## STEP 8: TEST WEBSITE

1. Buka browser
2. Navigate ke: http://yourusername.pythonanywhere.com
3. Test semua halaman:
   - Home page (/)
   - Visualizations page (/visualizations)
   - About page (/about)
4. Test visualisasi interaktif
5. Check apakah gambar ditampilkan dengan benar

===============================================================================

## TROUBLESHOOTING

### Error 1: "Import Error: No module named 'flask'"
**Solusi**:
- Pastikan Flask sudah terinstall
- Jalankan: `pip3.10 install --user Flask`
- Reload web app

### Error 2: "Import Error: No module named 'pandas'"
**Solusi**:
- Install pandas: `pip3.10 install --user pandas`
- Install semua dependencies dari requirements.txt
- Reload web app

### Error 3: Static files tidak muncul (gambar error)
**Solusi**:
- Check path static files di tab Web
- Pastikan path benar: /home/yourusername/dashboard-jkn/static/
- Check apakah files ada di folder static
- Reload web app

### Error 4: "500 Internal Server Error"
**Solusi**:
- Check error log di tab "Web" > "Log files" > "Error log"
- Baca error message dan fix accordingly
- Common issues:
  - Import error → install missing packages
  - Path error → fix paths in WSGI file
  - File not found → upload missing files

### Error 5: Data/Excel file tidak bisa dibaca
**Solusi**:
- Pastikan file Excel sudah diupload
- Check path file di app.py
- Gunakan absolute path jika perlu
- Generate data_cleaned.csv terlebih dahulu

===============================================================================

## TIPS OPTIMASI

### 1. Pre-generate Visualizations
Sebelum deploy, jalankan di local:
```bash
python data_preprocessing.py
python statistical_analysis.py
python data_visualization.py
```
Upload semua hasil visualisasi ke folder static/

### 2. Gunakan Data Cleaned
- Upload data_cleaned.csv
- Update app.py untuk load dari data_cleaned.csv
- Lebih cepat daripada load Excel

### 3. Compress Images
- Gunakan tool seperti TinyPNG
- Reduce ukuran file gambar
- Faster loading time

### 4. Enable Caching
Tambahkan di app.py:
```python
from flask import Flask
app = Flask(__name__)

# Add caching
@app.after_request
def add_header(response):
    response.cache_control.max_age = 300
    return response
```

===============================================================================

## MAINTENANCE

### Update Code:
1. Edit file via web interface atau Git
2. Reload web app
3. Clear browser cache jika perlu

### Update Data:
1. Upload new data file
2. Run preprocessing script via Bash console
3. Reload web app

### View Logs:
- Access Log: Tab Web > Log files > Access log
- Error Log: Tab Web > Log files > Error log
- Server Log: Tab Web > Log files > Server log

===============================================================================

## UPGRADE TO PAID ACCOUNT (Opsional)

### Free Account Limitations:
- 1 web app only
- yourusername.pythonanywhere.com domain
- 512 MB disk space
- Daily CPU quota
- Sleeps after inactivity

### Paid Account Benefits:
- Custom domain (www.yourdomain.com)
- More disk space
- More CPU time
- No sleep
- Multiple web apps
- SSH access

Price: Mulai dari $5/month

===============================================================================

## ALTERNATIVE: CUSTOM DOMAIN

### Jika punya domain sendiri:
1. Upgrade ke paid account
2. Add domain di tab "Web"
3. Update DNS settings di domain provider:
   - A record: point to PythonAnywhere IP
4. Wait for DNS propagation (24-48 hours)

===============================================================================

## CHECKLIST DEPLOYMENT

Sebelum presentasi, pastikan:
- [ ] Semua file sudah diupload
- [ ] Dependencies terinstall
- [ ] WSGI file dikonfigurasi dengan benar
- [ ] Static files path sudah di-set
- [ ] Web app sudah di-reload
- [ ] Website bisa diakses
- [ ] Semua halaman berfungsi
- [ ] Visualisasi muncul dengan benar
- [ ] Visualisasi interaktif berfungsi
- [ ] Tidak ada error 404 atau 500
- [ ] Mobile responsive (test di HP)

===============================================================================

## DEMO URL

Share URL ini untuk presentasi:
http://yourusername.pythonanywhere.com

Siapkan QR Code untuk kemudahan akses!

===============================================================================

## CONTACT PYTHONANYWHERE SUPPORT

Jika ada masalah:
- Forum: https://www.pythonanywhere.com/forums/
- Email: support@pythonanywhere.com
- Help: https://help.pythonanywhere.com/

===============================================================================
